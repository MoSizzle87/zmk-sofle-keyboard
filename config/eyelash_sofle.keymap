// ============================================================================
// ZMK Keymap â€“ Version simple (momentary layers)
// - M1 = &mo 1 (NAV momentary)
// - M2 = &mo 2 (CODE momentary)
// - CAPS (BASE) = Cmd+Space (Raycast/Spotlight)
// - Tri-layer: NAV + CODE => SYS
// ============================================================================

#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/outputs.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };
&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc { acceleration-exponent = <1>; time-to-max-speed-ms = <100>; delay-ms = <0>; };
&mmv { time-to-max-speed-ms = <500>; acceleration-exponent = <1>; trigger-period-ms = <16>; };

/ {
  // Encodeur -> scroll
  scroll_encoder: scroll_encoder {
    compatible = "zmk,behavior-sensor-rotate";
    #sensor-binding-cells = <0>;
    bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;
    tap-ms = <100>;
  };

  // Tri-layer: NAV + CODE => SYS
  conditional_layers {
    compatible = "zmk,conditional-layers";
    tri_layer { if-layers = <1 2>; then-layer = <3>; };
  };

  // KEYMAP
  keymap {
    compatible = "zmk,keymap";

    // ===== BASE =====
    BASE {
      bindings = <
&kp ESC        &kp N1     &kp N2        &kp N3        &kp N4       &kp N5     &kp UP         &kp N6     &kp N7     &kp N8     &kp N9      &kp N0     &kp BACKSPACE 
&kp TAB        &kp Q      &kp W         &kp E         &kp R        &kp T      &kp DOWN       &kp Y      &kp U      &kp I      &kp O       &kp P      &kp BSLH
&kp LG(SPACE)  &kp A      &kp S         &kp D         &kp F        &kp G      &kp LEFT       &kp H      &kp J      &kp K      &kp L       &kp SEMI   &kp APOS
&kp LSHFT      &kp Z      &kp X         &kp C         &kp V        &kp B      &kp RIGHT      &kp N      &kp M      &kp COMMA  &kp DOT     &kp FSLH   &kp EQUAL
&kp C_MUTE     &kp LCTRL  &kp LEFT_ALT  &kp LEFT_GUI  &mo 1        &kp ENTER  &kp ENTER      &kp SPACE  &kp MINUS  &kp RSHFT  &mo 2       &kp DELETE
      >;
      sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
      display-name = "BASE";
    };

    // ===== NAV =====
    NAV {
      bindings = <
&kp ESC     &kp F1        &kp F2         &kp F3         &kp F4          &kp F5           &mmv MOVE_UP     &kp F6        &kp F7        &kp F8        &kp F9        &kp F10       &kp F11
&trans      &kp GRAVE     &trans         &trans         &trans          &trans           &mmv MOVE_DOWN   &kp HOME      &kp PG_DN     &kp PG_UP     &kp END       &kp MINUS     &kp EQUAL
&kp CAPS    &kp LG(LEFT)  &kp LG(DOWN)   &kp LG(UP)     &kp LG(RIGHT)   &trans           &mmv MOVE_LEFT   &kp LEFT      &kp DOWN      &kp UP        &kp RIGHT     &trans        &trans
&kp LSHFT   &kp LG(Z)     &kp LG(X)      &kp LG(C)      &kp LG(V)       &kp LG(LS(Z))    &mmv MOVE_RIGHT  &kp DEL       &kp BACKSPACE &kp INS       &kp F12       &trans        &trans
&kp C_MUTE  &trans        &trans         &trans         &trans          &trans           &trans           &trans        &trans        &trans        &trans        &trans
      >;
      display-name = "NAV";
      sensor-bindings = <&scroll_encoder>;
    };

    // ===== CODE =====
    CODE {
      bindings = <
&kp TILDE   &kp EXCL     &kp AT          &kp HASH       &kp DOLLAR      &kp PERCENT     &mmv MOVE_UP     &kp CARET     &kp AMPS      &kp ASTERISK      &kp LPAR          &kp RPAR   &kp PIPE
&trans      &kp MINUS    &kp EQUAL       &kp UNDER      &kp PLUS        &kp GRAVE       &mmv MOVE_DOWN   &kp LBRC      &kp RBRC      &kp LEFT_BRACKET  &kp RIGHT_BRACKET &kp SLASH  &kp BSLH
&trans      &kp LESS     &kp GREATER     &kp COLON      &kp SEMI        &kp COMMA       &mmv MOVE_LEFT   &kp DOT       &kp QMARK     &kp EXCL          &kp PLUS          &kp MINUS  &kp EQUAL
&trans      &trans       &trans          &trans         &trans          &trans          &mmv MOVE_RIGHT  &kp QUOTE     &kp DQT       &trans            &kp F12           &trans     &trans
&trans      &trans       &trans          &trans         &trans          &trans          &trans           &trans        &trans        &trans            &trans            &trans
      >;
      display-name = "CODE";
      sensor-bindings = <&scroll_encoder>;
    };

    // ===== SYS =====
    SYS {
      bindings = <
&bt BT_SEL 0  &bt BT_SEL 1    &bt BT_SEL 2    &bt BT_SEL 3  &bt BT_SEL 4  &trans  &trans  &trans  &trans  &trans      &trans      &trans       &trans
&trans        &bt BT_CLR      &bt BT_CLR_ALL  &trans        &trans        &trans  &trans  &trans  &trans  &trans      &trans      &trans       &trans
&trans        &out OUT_USB    &out OUT_BLE    &trans        &trans        &trans  &trans  &trans  &trans  &trans      &trans      &trans       &trans
&trans        &sys_reset      &trans          &bootloader   &trans        &trans  &trans  &trans  &trans  &sys_reset  &soft_off   &bootloader  &trans
&trans        &trans          &trans          &trans        &trans        &trans  &trans  &trans  &trans  &trans      &trans      &trans
      >;
      display-name = "SYS";
      sensor-bindings = <&scroll_encoder>;
    };
  };
};
